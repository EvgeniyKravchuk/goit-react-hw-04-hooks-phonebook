{"version":3,"sources":["components/General.styled.jsx","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/contactsList/ContaxList.styled.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Title","h1","h2","Form","form","Label","label","props","filter","Input","input","Button","button","ContactForm","addContact","contacts","useState","name","setName","number","setNumber","clear","onSubmit","evt","preventDefault","contact","id","uuidv4","notUniqueName","some","item","notUniqueNumber","alert","handleSubmit","type","pattern","title","required","placeholder","onChange","target","value","List","ul","Item","li","ContactsList","deleteContact","map","onClick","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","filterValue","setFilterValue","useEffect","setItem","stringify","prev","length","toLowerCase","includes","newContacts","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10796d1.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 1400px;\n  min-height: 100vh;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: grey;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const Undertitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600px;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  text-align: center;\n\n  padding: 20px;\n\n  border-bottom: 5px solid black;\n`;\n\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weight: 600;\n\n  display: flex;\n  justify-content: ${(props) => (props.filter ? \"center\" : \"space-between\")};\n  align-items: ${(props) => (props.filter ? \"center\" : \"baseline\")};\n\n  flex-direction: ${(props) => (props.filter ? \"column\" : \"row\")};\n\n  transition-duration: 500ms;\n\n  cursor: pointer;\n\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 300px;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  outline: none;\n\n  border: none;\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  padding-left: 10px;\n  margin-left: 20px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n    border: 2px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  font-weight: 500;\n\n  width: 150px;\n  height: 30px;\n\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Input, Label, Button, Form } from \"./ContactForm.styled\";\n\nexport default function ContactForm({ addContact, contacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const id = uuidv4();\n    const contact = { id, name, number };\n    const notUniqueName = contacts.some((item) => item.name === name);\n    const notUniqueNumber = contacts.some((item) => item.number === number);\n\n    if (notUniqueName) {\n      return alert(name + \" уже добавлен(а) в список контактов\");\n    } else if (notUniqueNumber) {\n      return alert(\"Уже добавлен контакт с номером: \" + number);\n    } else if (name === \"\" || number === \"\") {\n      return alert(\"Пожалуйста, введите Имя и номер.\");\n    } else {\n      addContact(contact);\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form\n      onSubmit={(evt) => {\n        handleSubmit(evt);\n      }}\n    >\n      <Label>\n        Имя:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Введите имя\"\n          onChange={(evt) => {\n            setName(evt.target.value);\n          }}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Номер:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Введите номер телефона\"\n          onChange={(evt) => {\n            setNumber(evt.target.value);\n          }}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Подтвердить</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n\n  width: 1000px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  margin: 0px;\n  margin-top: 20px;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  font-size: 26px;\n  font-weight: 600;\n\n  width: 400px;\n  height: 50px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border: 1px solid black;\n\n  background-color: #4b4b4b;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid black;\n  border-radius: 50%;\n\n  padding: 5px;\n\n  background-color: #4b4b4b;\n\n  cursor: pointer;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    border: 1px solid orange;\n    transform: rotate(360deg) scale(1.15);\n\n    svg {\n      fill: orange;\n    }\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n\n    transition-duration: 500ms;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { List, Item, Button } from \"./ContaxList.styled\";\n\nexport default function ContactsList({ contacts, deleteContact }) {\n  return (\n    <List>\n      {contacts().map((contact) => {\n        return (\n          <Item key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button id={contact.id} onClick={deleteContact}>\n              <FaRegTrashAlt />\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { Input, Label } from \"../contactForm/ContactForm.styled\";\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <Label filter=\"true\">\n      Введите имя для поиска в списке контактов\n      <Input name=\"filter\" onChange={onChange} value={filter} />\n    </Label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport \"./App.module.css\";\nimport { Wrapper, Title } from \"./components/General.styled\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactsList from \"./components/contactsList/ContactsList\";\nimport Filter from \"./components/filter/Filter\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n  );\n  const [filterValue, setFilterValue] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (contact) => {\n    setContacts((prev) => [...prev, contact]);\n  };\n\n  const deleteContact = (evt) => {\n    const newContacts = contacts.filter(\n      (item) => item.id !== evt.currentTarget.id\n    );\n\n    setContacts(newContacts);\n  };\n\n  const filterElements = () => {\n    const filteredContacts = contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filterValue.toLowerCase());\n    });\n\n    return filteredContacts;\n  };\n\n  const notification = \"В данный момент нет сохраненных контактов ;=(\";\n\n  return (\n    <Wrapper>\n      <Title>Телефонная книга:</Title>\n      <ContactForm addContact={addContact} contacts={contacts} />\n      <Filter\n        filter={filterValue}\n        onChange={(evt) => {\n          setFilterValue(evt.target.value);\n        }}\n      />\n      {contacts.length < 1 ? (\n        notification\n      ) : (\n        <ContactsList\n          contacts={filterElements}\n          deleteContact={(evt) => deleteContact(evt)}\n        />\n      )}\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}